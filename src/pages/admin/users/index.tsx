import { GetServerSideProps, type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { getSession, useSession } from "next-auth/react";
import { type Session as SessionAuth } from 'next-auth'
import { api } from "~/utils/api";
import { Formation, User } from "@prisma/client";
import { DifficultyText } from "~/pages/components/difficulties"
import Header from "../../components/header"
import { useState } from "react";
import { FaLock, FaLockOpen, FaPenAlt } from "react-icons/fa";
import Title from "../../components/title";

export const getServerSideProps: GetServerSideProps<{
    session: SessionAuth;
}> = async function (context) {
    const session = await getSession(context)
    const admin = session?.user.admin

    if (!session || !admin) {
        return {
            redirect: {
                destination: '/',
                permanent: false,
            },
        }
    }

    return {
        props: { session }
    }
};

const Users: NextPage = () => {
    const { data: sessionData } = useSession();

    const admin = sessionData?.user.admin

    const { data: users } = api.user.getAll.useQuery()

    const [filterType, setFilterType] = useState("")

    users as User[] && users && users.length > 0 && filterType == "alphabetique" ? users?.sort(function (a, b) {
        if ((a.name as string) < (b.name as string)) {
          return -1;
        }
        if ((a.name as string) > (b.name as string)) {
          return 1;
        }
        return 0;
    }) : users as User[] && users && users.length > 0 && filterType == "admin" && users?.sort(function (a, b) {
        return (b.admin as any) - (a.admin as any);
    })

    function changeFilterType(type: string) {
        setFilterType(type)
    }

    return (
        <>
            <Head>
                <title>Administration</title>
                <meta name="description" content="Generated by create-t3-app" />
                <style>
                    @import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');
                </style>
            </Head>
            {admin ?

                <main className="flex min-h-screen bg-white justify-between dark:bg-[#082F38] pb-12">
                    <div className="flex flex-col items-start justify-start gap-12 pl-28 pt-20 pr-6 w-full">
                        <div className="flex flex-row items-center justify-between w-full">
                            <Title title={"Gérez les utilisateurs"} link={""} />
                            <div className="flex flex-row items-center justify-evenly">
                                <p className="mr-2">Trier par : </p>
                                {filterType === "alphabetique" ? <button className="px-4 py-1 bg-[#0E6073] rounded-full mx-1" onClick={() => changeFilterType("alphabetique")}>
                                    <p className="text-[#fff]">Alphabétique</p>
                                </button> :
                                <button className="px-4 py-1 bg-[#D9D9D9] dark:bg-[#041F25] rounded-full mx-1" onClick={() => changeFilterType("alphabetique")}>
                                    <p className="text-[#0E6073] dark:text-[#63AEAB]">Alphabétique</p>
                                </button>
                                }
                                {filterType === "admin" ? <button className="px-4 py-1 bg-[#0E6073] rounded-full mx-1" onClick={() => changeFilterType("admin")}>
                                    <p className="text-[#fff]">Administrateurs</p>
                                </button> :
                                <button className="px-4 py-1 bg-[#D9D9D9] dark:bg-[#041F25] rounded-full mx-1" onClick={() => changeFilterType("admin")}>
                                    <p className="text-[#0E6073] dark:text-[#63AEAB]">Administrateurs</p>
                                </button>
                                }
                            </div>
                        </div>
                        <div className="flex flex-col w-full">
                            {users as User[] && users && users.length > 0 && users.map((user) => {
                                let admin: string;
                                if (user.admin)
                                    admin = "Admin"
                                else
                                    admin = "Non admin"
                                return (
                                    <Link
                                        className="flex flex-row justify-between items-center mb-1 w-full bg-white dark:bg-[#041F25] shadow-[4px_5px_12px_6px_rgba(0,0,0,0.25)] py-2 pl-16 pr-6 justify-between hover:bg-[#ebebeb]/20 dark:hover:bg-[#083039] h-[5rem]"
                                        href={`/admin/users/${encodeURIComponent(user.id)}`}
                                        key={user.id}
                                    >
                                        <span className="flex flex-row items-center justify-between">
                                            <div className="block h-[3rem] w-[3rem]">
                                                {user.image && <img src={user.image} className="w-full h-full rounded-full object-cover"></img>}
                                            </div>
                                            <p className="text-base ml-3 font-bold text-[#0E6073]">{user.name}</p>
                                            <p className="text-base ml-3 text-[#0E6073]">{user.email}</p>
                                        </span>

                                        <span className="flex flex-row items-center justify-between w-5/12">
                                            <p className="text-base ml-3 font-bold text-[#0E6073]">{admin}</p>
                                        </span>
                                    </Link>
                                )
                            })}
                        </div>
                    </div>
                    <Header selected={5} />


                </main> : <img src="https://media.discordapp.net/attachments/688793736620146689/915869475423813662/20210709_215217.gif" alt="Pas Admnin, Ratio"></img>

            }
        </>
    );
};

export default Users;