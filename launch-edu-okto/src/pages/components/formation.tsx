import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { Formation, Technologie } from "@prisma/client";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const { data: formations } = api.formation.getAll.useQuery()
  const admin = sessionData?.user.admin
  let parser = new DOMParser();

  return (
    <>
      <Head>
        <title>Liste des formations</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-white">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-[#0E6073] sm:text-[5rem]">
            Oktopod Formations List
          </h1>
          <div className="flex flex-col items-center gap-2 fixed">
            <AuthShowcase />
            <Link href="/"><button className="rounded-full bg-[#0E6070]/10 px-10 py-3 font-semibold no-underline transition hover:bg-[#0E6070]/20">Home</button></Link>
          </div>

          <div className="grid grid-cols-1 gap-4 sm:grid-cols-5 md:gap-8">
            {formations as Formation[] && formations && formations.length > 0 && formations.map((forma) => {
              let dif: string;
              switch (forma.difficulte) {
                case 1: dif = "Débutant"; break;
                case 2: dif = "Moyen"; break;
                case 3: dif = "Expert"; break;
                default: dif = "Débutant";
              }
              if (!forma.hidden || forma.hidden && admin)
                return (
                  <Link
                    className="flex min-w-[50px] max-w-2xl gap-4 rounded-xl bg-[#0E6070]/10 p-4 hover:bg-[#0E6070]/20"
                    href={`/components/formations/${encodeURIComponent(forma.id)}`}
                    key={forma.id}
                  >
                    <h3 className="text-md font-bold">{forma.title}</h3>

                    <span className="text-lg">
                      {dif}
                    </span>
                  </Link>
                )
            })}
          </div>


        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      {sessionData?.user.admin && <Link href="/components/admin"><button className="rounded-full bg-[#0E6070]/10 px-10 py-3 font-semibold no-underline transition hover:bg-[#0E6070]/20">Admin</button></Link>}
      <button
        className="rounded-full bg-[#0E6070]/10 px-10 py-3 font-semibold no-underline transition hover:bg-[#0E6070]/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

