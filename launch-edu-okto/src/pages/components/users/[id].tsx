import { type NextPage } from 'next';
import { GetServerSideProps } from 'next'
import { InferGetServerSidePropsType } from 'next'
import { getServerSession } from "next-auth";
import Head from "next/head";
import Link from "next/link";
import { getSession, signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { prisma } from '~/server/db';
import { Etape, EtapeType, User } from '@prisma/client';

export const getServerSideProps: GetServerSideProps<{
    user: User;
}> = async function (context) {

    const session = await getSession(context)

    const user = await prisma.user.findUnique({
        where: {
            id: context.query.id as string
        },
    });

    if (!session) {
      return {
        redirect: {
          destination: '/',
          permanent: false,
        },
      }
    }
    else {
        
        return {
            props: {
                user: JSON.parse(JSON.stringify(user)) as User
            }
        };
    }
    
};

const etapes: NextPage<InferGetServerSidePropsType<typeof getServerSideProps>> = ({ user }) => {
    const { data: sessionData } = useSession();

    async function haha(event: React.SyntheticEvent) {
        console.log("haha")
    }
    
    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="flex min-h-screen bg-white justify-between">
                <div className="flex item-center justify-end gap-36 fixed ml-28 w-full pr-40 border-b-4 border-[#0E6073]">
                    <button onClick={haha} className="px-10 py-3 font-semibold border-[#0E6073] transition hover:border-b-2  focus:border-b-2">Mes Cours</button>
                    <button onClick={haha} className="px-10 py-3 font-semibold  border-[#0E6073] transition hover:border-b-2  focus:border-b-2">Mon Profil</button>
                    <button onClick={haha} className="px-10 py-3 font-semibold  border-[#0E6073] transition hover:border-b-2  focus:border-b-2">Je n'ai plus d'id√©e</button>
                    {sessionData && sessionData.user?.image && <img src={sessionData.user?.image} className="max-w-[4rem] max-h-[4rem] border-[#0E6073] transition hover:border-2  focus:border-2" autoFocus></img>}
                </div>
                <div className="flex flex-col items-center justify-between gap-2 min-h-screen top-0 left-0 bg-[#0E6073] fixed m-w-xs p-2">
                    <Link href="/"><img src="/okto.png" className="max-w-[3rem]"></img></Link>
                    <AuthShowcase />
                </div>

                <div className="flex w-full max-h-screen flex-col items-center ml-[6rem]">
                    <div className="flex gap-10 mt-28">
                    <h1 className="text-5xl font-extrabold tracking-tight  sm:text-[3rem]"><label htmlFor="typeName">{user.name}</label></h1>

                    </div>
                </div>


            </main>
        </>
    );
};

export default etapes;

const AuthShowcase: React.FC = () => {
    const { data: sessionData } = useSession();
  
    return (
      <div>
        {sessionData?.user.admin && <Link href="/components/admin"><img src="https://icones.pro/wp-content/uploads/2022/02/services-parametres-et-icone-d-engrenage-gris.png" className="max-w-[3rem]"></img></Link>}
        <button
          className="rounded-full px-3 py-3 font-semibold  no-underline transition hover:bg-white/10"
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? <img src="/arrow.png" className="max-w-[1.5rem]"></img> : "Sign in"}
        </button>
      </div>
  
    );
  };